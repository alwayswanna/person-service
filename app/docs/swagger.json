{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server on go-lang.",
        "title": "person-service API",
        "contact": {
            "name": "API Support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "host": "localhost:9902",
    "basePath": "/api/v1",
    "paths": {
        "/person/create": {
            "post": {
                "description": "Create new person entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "Create new person entity",
                "parameters": [
                    {
                        "description": "Model for create new person entity.",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PersonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PersonResponse"
                            }
                        }
                    }
                }
            }
        },
        "/person/delete": {
            "delete": {
                "description": "Delete existing persons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "Delete existing persons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID for remove person entity",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PersonDeleteResponse"
                            }
                        }
                    }
                }
            }
        },
        "/person/get/id": {
            "get": {
                "description": "Find existing persons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "Find existing persons by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of person entity.",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PersonResponse"
                            }
                        }
                    }
                }
            }
        },
        "/person/get/login": {
            "get": {
                "description": "Find existing persons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "Find existing persons by login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Login of person entity.",
                        "name": "login",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PersonResponse"
                            }
                        }
                    }
                }
            }
        },
        "/person/update": {
            "put": {
                "description": "Update existing persons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "Update existing persons",
                "parameters": [
                    {
                        "description": "Model for update person entity",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PersonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PersonResponse"
                            }
                        }
                    }
                }
            }
        },
        "/persons": {
            "get": {
                "description": "Load persons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "Load first 50 persons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page of person table, when load by 50 rows.",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PersonResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.PersonDeleteResponse": {
            "description": "Model for response on delete operation.",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model.PersonRequest": {
            "description": "Model for create or update person entity.",
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "model.PersonResponse": {
            "description": "Model for response on API operations.",
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "API for create/update/delete/edit persons."
    }
}